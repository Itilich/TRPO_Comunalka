<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/site.css">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
    <title>Расчет стоимости коммунальных услуг</title>
    <style>
        /* Стили модального окна */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }
        .invalid-input {
            border-color: red;
        }

        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>

<body>
    <div class="container">
        <div class="human">
            <div class="col">
                <label for="Human">Количество прописанных человек</label>
                <input type="text" id="Human" class="form-control" placeholder="Введите значение">
            </div>
        </div>
        <div id="rows-container">
            <div class="row" id="hot-water-rows">
                <div class="col">
                    <div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="hot_water_norm">
                            <label class="form-check-label" for="hot_water_norm">Нормативное значение</label>
                        </div>
                        <label for="hot_water">Горячая вода(м3) (счетчик 1)</label>
                    </div>
                    <input type="text" id="hot_water" class="form-control" placeholder="Введите значение">
                    <button onclick="addHotWaterRow()" class="btn btn-secondary">Добавить счетчик</button>
                </div>
            </div>
            <div class="row" id="cold-water-rows">
                <div class="col">
                    <div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="cold_water_norm">
                            <label class="form-check-label" for="cold_water_norm">Нормативное значение</label>
                        </div>
                        <label for="cold_water">Холодная вода(м3) (счетчик 1)</label>
                    </div>
                    <input type="text" id="cold_water" class="form-control" placeholder="Введите значение">
                    <button onclick="addColdWaterRow()" class="btn btn-secondary">Добавить счетчик</button>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="heating_norm">
                        <label class="form-check-label" for="heating_norm">Нормативное значение</label>
                    </div>
                    <label for="heating">Отопление(кВт*ч)</label>
                    <input type="text" id="heating" class="form-control" placeholder="Введите значение">
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="energy_norm">
                        <label class="form-check-label" for="energy_norm">Нормативное значение</label>
                    </div>
                    <label for="energy">Энергоснабжение(кВт*ч)</label>
                    <input type="text" id="energy" class="form-control" placeholder="Введите значение">
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="repair">Капитальный ремонт(м2)</label>
                    <input type="text" id="repair" class="form-control" placeholder="Введите значение">
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="maintenance">Содержание жилого помещения(м2)</label>
                    <input type="text" id="maintenance" class="form-control" placeholder="Введите значение">
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="benefit">Льгота</label>
                    <select id="benefit" class="form-control">
                        <option value="" disabled selected hidden>Выберите льготу</option>
                        <option value="инвалидность">Инвалидность</option>
                        <option value="работник образовательного учреждения">Работник образовательного учреждения</option>
                        <option value="ветераны">Ветераны</option>
                        <option value="пенсионеры">Пенсионеры</option>
                        <option value="многодетные семьи">Многодетные семьи</option>
                        <option value="нет льготы">Нет льготы</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <button onclick="calculate()" class="btn btn-primary">Рассчитать</button>
                    <button onclick="previewReport()" class="btn btn-info">Предварительный просмотр отчета</button>
                    <button onclick="exportToExcel()" class="btn btn-success">Экспорт отчета в Excel</button>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p id="result"></p>
                </div>
            </div>
            <div id="preview-modal" class="modal">
                <div class="modal-content">
                    <span class="close" onclick="closePreview()">&times;</span>
                    <div id="preview-data"></div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <canvas id="myChart" width="400" height="400"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Библиотека для расчета коммунальных платежей
        var TRPO_Comunalka = {
            Lib: {
                Comunalka: {
                    Com: function (L, Human, H, C, F, En, Kap, Space) {
                        const k1 = 0.72; //Инвалидность
                        const k2 = 0.85; //Работник образовательных учреждений
                        const k3 = 0.7; //Ветеран
                        const k4 = 0.75; //Пенсионер
                        const k5 = 0.8; //Многодетная семья
                        const k6 = 1; //Льгота отсутствует

                        ///ошибки---------------------------------------------------------
                        if (L <= 0 || L > 6) {
                            throw new Error("Льгота выбирается по списку от 1 до 6");
                        }
                        if (Human < 0 || H < 0 || C < 0 || F < 0 || En < 0 || Kap < 0 || Space < 0) {
                            throw new Error("Коммунальные данные не могут быть отрицательными!");
                        }
                        ///Нормативные расчеты-------------------------------------------
                        const hot_water = Human * 200;
                        const cold_water = Human * 75;
                        const heating = Human * 100;
                        const energy = Human * 150;
                        ///--------------------------------------------------------------
                        // Вычисление суммы к оплате
                        switch (L) {
                            case 1:
                                return ((H * 39) + (C * 15) + (Human * 50) + (F * 100) + (En * 5) + (Kap * 15) + (Space * 10)) * k1;
                            case 2:
                                return ((H * 39) + (C * 15) + (Human * 50) + (F * 100) + (En * 5) + (Kap * 15) + (Space * 10)) * k2;
                            case 3:
                                return ((H * 39) + (C * 15) + (Human * 50) + (F * 100) + (En * 5) + (Kap * 15) + (Space * 10)) * k3;
                            case 4:
                                return ((H * 39) + (C * 15) + (Human * 50) + (F * 100) + (En * 5) + (Kap * 15) + (Space * 10)) * k4;
                            case 5:
                                return ((H * 39) + (C * 15) + (Human * 50) + (F * 100) + (En * 5) + (Kap * 15) + (Space * 10)) * k5;
                            case 6:
                                return ((H * 39) + (C * 15) + (Human * 50) + (F * 100) + (En * 5) + (Kap * 15) + (Space * 10)) * k6;
                            default:
                                throw new Error("Недопустимое значение L.");
                        }
                    }
                }
            }
        };

        var hotWaterCounter = 1;
        var coldWaterCounter = 1;

        function addHotWaterRow() {
            if (hotWaterCounter >= 3) return;
            hotWaterCounter++;
            var container = document.getElementById('hot-water-rows');
            var newRow = document.createElement('div');
            newRow.className = 'row';
            newRow.id = `hot-water-row-${hotWaterCounter}`;
            newRow.innerHTML = `
                        <div class="col">
                            <div>
                                <label>Горячая вода(м3) (счетчик ${hotWaterCounter})</label>
                            </div>
                            <input type="text" class="form-control" placeholder="Введите значение">
                            <button onclick="removeRow('hot-water-row-${hotWaterCounter}', 'hot')" class="btn btn-danger">Удалить</button>
                        </div>
                    `;
            container.appendChild(newRow);
        }

        function addColdWaterRow() {
            if (coldWaterCounter >= 3) return;
            coldWaterCounter++;
            var container = document.getElementById('cold-water-rows');
            var newRow = document.createElement('div');
            newRow.className = 'row';
            newRow.id = `cold-water-row-${coldWaterCounter}`;
            newRow.innerHTML = `
                        <div class="col">
                            <div>
                                <label>Холодная вода(м3) (счетчик ${coldWaterCounter})</label>
                            </div>
                            <input type="text" class="form-control" placeholder="Введите значение">
                            <button onclick="removeRow('cold-water-row-${coldWaterCounter}', 'cold')" class="btn btn-danger">Удалить</button>
                        </div>
                    `;
            container.appendChild(newRow);
        }

        function removeRow(rowId, type) {
            var row = document.getElementById(rowId);
            row.parentNode.removeChild(row);
            if (type === 'hot') {
                hotWaterCounter--;
            } else if (type === 'cold') {
                coldWaterCounter--;
            }
        }
        function updateValues() {
            const humanCount = parseFloat(document.getElementById('Human').value) || 0;

            // Выберите все строки горячей и холодной воды
            const hotWaterInputs = document.querySelectorAll('#hot-water-rows input[type="text"]');
            const coldWaterInputs = document.querySelectorAll('#cold-water-rows input[type="text"]');

            hotWaterInputs.forEach(function (input) {
                if (document.getElementById('hot_water_norm').checked) {
                    input.value = (humanCount * 200) / 39 / 100;
                    input.disabled = true;
                } else {
                    input.disabled = false;
                }
            });

            coldWaterInputs.forEach(function (input) {
                if (document.getElementById('cold_water_norm').checked) {
                    input.value = (humanCount * 75) / 15 / 100;
                    input.disabled = true;
                } else {
                    input.disabled = false;
                }
            });

            const heatingInput = document.getElementById('heating');
            const energyInput = document.getElementById('energy');

            if (document.getElementById('heating_norm').checked) {
                heatingInput.value = (humanCount * 5);
                heatingInput.disabled = true;
            } else {
                heatingInput.disabled = false;
            }

            if (document.getElementById('energy_norm').checked) {
                energyInput.value = (humanCount * 150) / 5;
                energyInput.disabled = true;
            } else {
                energyInput.disabled = false;
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('hot_water_norm').addEventListener('change', updateValues);
            document.getElementById('cold_water_norm').addEventListener('change', updateValues);
            document.getElementById('heating_norm').addEventListener('change', updateValues);
            document.getElementById('energy_norm').addEventListener('change', updateValues);
            document.getElementById('Human').addEventListener('input', updateValues);
        });
        function saveDataToFile(data) {
            // Преобразование данных в JSON
            var jsonData = JSON.stringify(data);

            // Сохранение данных в файл
            localStorage.setItem('comunalka_data', jsonData);
        }

        function loadDataFromFile() {
            // Загрузка данных из файла
            var jsonData = localStorage.getItem('comunalka_data');
            if (jsonData) {
                return JSON.parse(jsonData);
            } else {
                return null;
            }
        }

        window.onload = function () {
            // При загрузке страницы, проверяем наличие сохраненных данных и заполняем поля ввода
            var savedData = loadDataFromFile();
            if (savedData) {
                document.getElementById('hot_water').value = savedData.hot_water;
                document.getElementById('cold_water').value = savedData.cold_water;
                document.getElementById('heating').value = savedData.heating;
                document.getElementById('energy').value = savedData.energy;
                document.getElementById('repair').value = savedData.repair;
                document.getElementById('maintenance').value = savedData.maintenance;
                document.getElementById('benefit').value = savedData.benefit;
                document.getElementById('Human').value = savedData.human; 
            }
        }

        function openPreview() {
            var modal = document.getElementById("preview-modal");
            modal.style.display = "block";
        }

        // Закрыть модальное окно предварительного просмотра отчета
        function closePreview() {
            var modal = document.getElementById("preview-modal");
            modal.style.display = "none";
        }

        function getBenefitCoefficient1(benefit) {
            switch (benefit) {
                case "инвалидность":
                    return 0.72;
                case "работник образовательного учреждения":
                    return 0.85;
                case "ветераны":
                    return 0.7;
                case "пенсионеры":
                    return 0.75;
                case "многодетные семьи":
                    return 0.8;
                case "нет льготы":
                    return 1;
                default:
                    throw new Error("Неправильно выбрана льгота");
            }
        }

        function exportToExcel() {
            var hotWater = 0;
            var coldWater = 0;
            var heating = parseFloat(document.getElementById('heating').value) || 0;
            var energy = parseFloat(document.getElementById('energy').value) || 0;
            var repair = parseFloat(document.getElementById('repair').value) || 0;
            var maintenance = parseFloat(document.getElementById('maintenance').value) || 0;
            var benefit = document.getElementById('benefit').value || "";
            var human = parseFloat(document.getElementById('Human').value) || 0;
            var result = 0;

            try {
                // Суммируем значения из всех строк горячей воды
                var hotWaterRows = document.querySelectorAll('#hot-water-rows input[type="text"]');
                hotWaterRows.forEach(function (input) {
                    hotWater += parseFloat(input.value) || 0;
                });

                // Суммируем значения из всех строк холодной воды
                var coldWaterRows = document.querySelectorAll('#cold-water-rows input[type="text"]');
                coldWaterRows.forEach(function (input) {
                    coldWater += parseFloat(input.value) || 0;
                });
                result = TRPO_Comunalka.Lib.Comunalka.Com(getBenefitCoefficient(benefit), human, hotWater, coldWater, heating, energy, repair, maintenance);

                // Формирование данных для экспорта в Excel
                var data = [
                    ["Коммунальная услуга", "Стоимость, руб", "Льгота", "Коэффициент льготы"],
                    // Добавляем значения из добавленных строк
                ];

                // Добавляем значения из добавленных строк горячей воды
                hotWaterRows.forEach(function (input, index) {
                    data.push(["Горячая вода (счетчик " + (index + 1) + ")", parseFloat(input.value) * 39 * getBenefitCoefficient1(benefit) + " руб"]);
                });

                // Добавляем значения из добавленных строк холодной воды
                coldWaterRows.forEach(function (input, index) {
                    data.push(["Холодная вода (счетчик " + (index + 1) + ")", parseFloat(input.value) * 15 * getBenefitCoefficient1(benefit) + " руб"]);
                });

                // Добавляем остальные данные
                data.push(["Вывоз ТБО", human * 50 * getBenefitCoefficient1(benefit) + " руб"]);
                data.push(["Отопление", heating * 100 * getBenefitCoefficient1(benefit) + " руб"]);
                data.push(["Энергоснабжение", energy * 5 * getBenefitCoefficient1(benefit) + " руб"]);
                data.push(["Капитальный ремонт", repair * 15 * getBenefitCoefficient1(benefit) + " руб"]);
                data.push(["Содержание жилого помещения", maintenance * 10 * getBenefitCoefficient1(benefit) + " руб"]);
                data.push(["Итоговая стоимость", result.toFixed(2) + " руб", benefit, getBenefitCoefficient1(benefit)]);

                // Создаем новую книгу Excel
                var wb = XLSX.utils.book_new();
                // Создаем новый лист
                var ws = XLSX.utils.aoa_to_sheet(data);
                // Добавляем лист к книге
                XLSX.utils.book_append_sheet(wb, ws, "Расчеты");

                // Устанавливаем ширину столбцов
                var wscols = [
                    { wpx: 200 }, // Ширина первого столбца
                    { wpx: 150 }, // Ширина второго столбца
                    { wpx: 150 }, // Ширина третьего столбца
                    { wpx: 200 }  // Ширина четвертого столбца
                ];
                ws['!cols'] = wscols;

                // Сохраняем книгу в файл
                XLSX.writeFile(wb, "расчеты.xlsx");
            } catch (error) {
                alert("Ошибка при экспорте в Excel: " + error.message);
            }
        }

        function calculate() {
            var hotWater = 0; // Обнуляем исходное значение горячей воды
            var coldWater = 0; // Обнуляем исходное значение холодной воды
            var heating = parseFloat(document.getElementById('heating').value) || 0;
            var energy = parseFloat(document.getElementById('energy').value) || 0;
            var repair = parseFloat(document.getElementById('repair').value) || 0;
            var maintenance = parseFloat(document.getElementById('maintenance').value) || 0;
            var benefit = document.getElementById('benefit').value || "";
            var human = parseFloat(document.getElementById('Human').value) || 0;
            var result = 0;

            try {
                // Суммируем значения из всех строк горячей воды
                var hotWaterRows = document.querySelectorAll('#hot-water-rows input[type="text"]');
                hotWaterRows.forEach(function (input) {
                    hotWater += parseFloat(input.value) || 0;
                });

                // Суммируем значения из всех строк холодной воды
                var coldWaterRows = document.querySelectorAll('#cold-water-rows input[type="text"]');
                coldWaterRows.forEach(function (input) {
                    coldWater += parseFloat(input.value) || 0;
                });
                result = TRPO_Comunalka.Lib.Comunalka.Com(getBenefitCoefficient(benefit), human, hotWater, coldWater, heating, energy, repair, maintenance); 

                document.getElementById('result').innerText = result.toFixed(2) + " руб.";

                // Сохранение данных в файл
                var data = {
                    hot_water: hotWater,
                    cold_water: coldWater,
                    heating: heating,
                    energy: energy,
                    repair: repair,
                    maintenance: maintenance,
                    benefit: benefit,
                    human: human
                };
                saveDataToFile(data);
                // Уничтожаем предыдущий объект графика, если он существует
                var oldChart = Chart.getChart("myChart");
                if (oldChart) {
                    oldChart.destroy();
                }

                // Создаем данные для диаграммы
                var ctx = document.getElementById('myChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Горячая вода', 'Холодная вода', 'Вывоз ТБО', 'Отопление', 'Энергоснабжение', 'Капитальный ремонт', 'Содержание жилого помещения'],
                        datasets: [{
                            data: [hotWater * 39 * getBenefitCoefficient1(benefit), coldWater * 15 * getBenefitCoefficient1(benefit), human * 50 * getBenefitCoefficient1(benefit), heating * 100 * getBenefitCoefficient1(benefit), energy * 5 * getBenefitCoefficient1(benefit), repair * 15 * getBenefitCoefficient1(benefit), maintenance * 10 * getBenefitCoefficient1(benefit)],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(255, 206, 86, 0.5)',
                                'rgba(75, 192, 192, 0.5)',
                                'rgba(153, 102, 255, 0.5)',
                                'rgba(255, 159, 64, 0.5)',
                                'rgba(255, 99, 132, 0.5)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)',
                                'rgba(255, 99, 132, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: false,
                        maintainAspectRatio: false
                    }
                });
            } catch (error) {
                document.getElementById('result').innerText = "Ошибка: " + error.message;
            }

        }

        function previewReport() {
            var hotWater = 0; // Обнуляем исходное значение горячей воды
            var coldWater = 0; // Обнуляем исходное значение холодной воды
            var human = parseFloat(document.getElementById('Human').value) || 0;
            var heating = parseFloat(document.getElementById('heating').value) || 0;
            var energy = parseFloat(document.getElementById('energy').value) || 0;
            var repair = parseFloat(document.getElementById('repair').value) || 0;
            var maintenance = parseFloat(document.getElementById('maintenance').value) || 0;
            var benefit = document.getElementById('benefit').value || "";
            var result = 0;

            try {
                // Суммируем значения из всех строк горячей воды
                var hotWaterRows = document.querySelectorAll('#hot-water-rows input[type="text"]');
                hotWaterRows.forEach(function (input) {
                    hotWater += parseFloat(input.value) || 0;
                });

                // Суммируем значения из всех строк холодной воды
                var coldWaterRows = document.querySelectorAll('#cold-water-rows input[type="text"]');
                coldWaterRows.forEach(function (input) {
                    coldWater += parseFloat(input.value) || 0;
                });

                result = TRPO_Comunalka.Lib.Comunalka.Com(getBenefitCoefficient(benefit), human, hotWater, coldWater, heating, energy, repair, maintenance);

                // Отображение данных
                var previewData = document.getElementById('preview-data');
                previewData.innerHTML = "";
                var table = document.createElement('table');
                var tbody = document.createElement('tbody');

                // Заголовок
                var headerRow = document.createElement('tr');
                var th1 = document.createElement('th');
                th1.textContent = 'Коммунальная услуга';
                var th2 = document.createElement('th');
                th2.textContent = 'Стоимость, руб';
                var th3 = document.createElement('th');
                th3.textContent = 'Льгота';
                var th4 = document.createElement('th');
                th4.textContent = 'Коэффициент льготы';
                headerRow.appendChild(th1);
                headerRow.appendChild(th2);
                headerRow.appendChild(th3);
                headerRow.appendChild(th4);
                tbody.appendChild(headerRow);

                // Добавляем данные из добавленных строк
                hotWaterRows.forEach(function (input, index) {
                    var tr = document.createElement('tr');
                    var td1 = document.createElement('td');
                    td1.textContent = 'Горячая вода (счетчик ' + (index + 1) + ')';
                    var td2 = document.createElement('td');
                    td2.textContent = parseFloat(input.value) * 39 * getBenefitCoefficient1(benefit) + ' руб';
                    var td3 = document.createElement('td');
                    td3.textContent = ""; // Льгота
                    var td4 = document.createElement('td');
                    td4.textContent = ""; // Коэффициент льготы
                    tr.appendChild(td1);
                    tr.appendChild(td2);
                    tr.appendChild(td3);
                    tr.appendChild(td4);
                    tbody.appendChild(tr);
                });

                coldWaterRows.forEach(function (input, index) {
                    var tr = document.createElement('tr');
                    var td1 = document.createElement('td');
                    td1.textContent = 'Холодная вода (счетчик ' + (index + 1) + ')';
                    var td2 = document.createElement('td');
                    td2.textContent = parseFloat(input.value) * 15 * getBenefitCoefficient1(benefit) + ' руб';
                    var td3 = document.createElement('td');
                    td3.textContent = ""; // Льгота
                    var td4 = document.createElement('td');
                    td4.textContent = ""; // Коэффициент льготы
                    tr.appendChild(td1);
                    tr.appendChild(td2);
                    tr.appendChild(td3);
                    tr.appendChild(td4);
                    tbody.appendChild(tr);
                });

                // Остальные данные
                var dataRows = [
                    { label: 'Вывоз ТБО', cost: human * 50 * getBenefitCoefficient1(benefit) },
                    { label: 'Отопление', cost: heating * 100 * getBenefitCoefficient1(benefit) },
                    { label: 'Энергоснабжение', cost: energy * 5 * getBenefitCoefficient1(benefit) },
                    { label: 'Капитальный ремонт', cost: repair * 15 * getBenefitCoefficient1(benefit) },
                    { label: 'Содержание жилого помещения', cost: maintenance * 10 * getBenefitCoefficient1(benefit) },
                    { label: 'Итоговая стоимость', cost: result.toFixed(2), benefit: benefit, coefficient: getBenefitCoefficient1(benefit) }
                ];

                dataRows.forEach(function (row) {
                    var tr = document.createElement('tr');
                    var td1 = document.createElement('td');
                    td1.textContent = row.label;
                    var td2 = document.createElement('td');
                    td2.textContent = row.cost + ' руб';
                    var td3 = document.createElement('td');
                    td3.textContent = row.benefit;
                    var td4 = document.createElement('td');
                    td4.textContent = row.coefficient;
                    tr.appendChild(td1);
                    tr.appendChild(td2);
                    tr.appendChild(td3);
                    tr.appendChild(td4);
                    tbody.appendChild(tr);
                });

                table.appendChild(tbody);
                previewData.appendChild(table);
            } catch (error) {
                alert("Ошибка при предварительном просмотре отчета: " + error.message);
            }
            openPreview();
        }
        function getBenefitCoefficient(benefit) {
            switch (benefit) {
                case "инвалидность":
                    return 1;
                case "работник образовательного учреждения":
                    return 2;
                case "ветераны":
                    return 3;
                case "пенсионеры":
                    return 4;
                case "многодетные семьи":
                    return 5;
                case "нет льготы":
                    return 6;
                default:
                    throw new Error("Неправильно выбрана льгота");
            }
        }
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</body>

</html>
